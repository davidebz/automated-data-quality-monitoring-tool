<!--
SPDX-FileCopyrightText: 2024 Catch Solve di Davide Montesin

SPDX-License-Identifier: AGPL-3.0-or-later
-->

<!-- * (C) 2024 Catch Solve di Davide Montesin * License: AGPL -->
<checks>
	<check>
		<name>altitude between 50m and 4000m</name>
		<category>range quality</category>
		<description>
		</description>
		<!-- dataset shortname, if empty is tested on all datasets -->
		<dataset_shortname>Accommodation</dataset_shortname>
		<!-- field name, if empty is tested on all fields -->
		<field_name>Altitude</field_name>
		<!-- field type (null, string, number, boolean, object, array), if empty is tested on all types -->
		<field_type>number</field_type>
		<!-- the javascript code that check the fields. There are predefined
		     variables that can be used:
		     
		     * fieldName:
		     * fieldValue:
		     * fieldType: null, string, number, boolean, object, array
		     * record: the entrire record containing the field
		     * json: the entire json
		     * jsonpath: an array with the "jsonpath" that point to the current record, useful for relative navigation
		 -->
		<jscode><![CDATA[

			fieldValue > 50 && fieldValue < 4000

		]]></jscode>
	</check>
	
	<check>
		<name>ImageGallery present</name>
		<category>completeness quality</category>
		<description>
		</description>
		<!-- dataset shortname, if empty is tested on all datasets -->
		<dataset_shortname>Accommodation</dataset_shortname>
		<!-- field name, if empty is tested on all fields -->
		<field_name>ImageGallery</field_name>
		<!-- field type (null, string, number, boolean, object, array), if empty is tested on all types -->
		<field_type></field_type>
		
		<!-- the javascript code that check the fields. There are predefined
		     variables that can be used:
		     
		     * fieldName:
		     * fieldValue:
		     * fieldType: null, string, number, boolean, object, array
		     * record: the entrire record containing the field
		     * json: the entire json
		     * jsonpath: an array with the "jsonpath" that point to the current record, useful for relative navigation
		 -->
		
		<jscode><![CDATA[

			fieldValue !== null

		]]></jscode>
	</check>


	<check>
		<name>Website present</name>
		<category>completeness quality</category>
		<description>
			this check that ...
		</description>
		<!-- dataset shortname, if empty is tested on all datasets -->
		<dataset_shortname>Accommodation</dataset_shortname>
		<!-- field name, if empty is tested on all fields -->
		<field_name>AccoDetail</field_name>
		<!-- field type (null, string, number, boolean, object, array), if empty is tested on all types -->
		<field_type></field_type>
		
		<!-- the javascript code that check the fields. There are predefined
		     variables that can be used:
		     
		     * fieldName:
		     * fieldValue:
		     * fieldType: null, string, number, boolean, object, array
		     * record: the entrire record containing the field
		     * json: the entire json
		     * jsonpath: an array with the "jsonpath" that point to the current record, useful for relative navigation
		 -->
		
		<jscode><![CDATA[

			fieldValue.it.Website != null && fieldValue.de.Website != null && fieldValue.en.Website != null

		]]></jscode>
	</check>

	<check>
		<name>mvalue realistic</name>
		<category>range quality</category>
		<description>
			this check that ...
		</description>
		<!-- dataset shortname, if empty is tested on all datasets -->
		<dataset_shortname></dataset_shortname>
		<!-- field name, if empty is tested on all fields -->
		<field_name>mvalue</field_name>
		<!-- field type (null, string, number, boolean, object, array), if empty is tested on all types -->
		<field_type>number</field_type>
		
		<!-- the javascript code that check the fields. There are predefined
		     variables that can be used:
		     
		     * fieldName:
		     * fieldValue:
		     * fieldType: null, string, number, boolean, object, array
		     * record: the entrire record containing the field
		     * json: the entire json
		     * jsonpath: an array with the "jsonpath" that point to the current record, useful for relative navigation
		 -->
		
		<jscode><![CDATA[

			fieldValue > 0

		]]></jscode>
	</check>
	
	<check>
		<name>mvalidtime not older than 30 day</name>
		<category>freshness quality</category>
		<description>
			this check that ...
		</description>
		<!-- dataset shortname, if empty is tested on all datasets -->
		<dataset_shortname></dataset_shortname>
		<!-- field name, if empty is tested on all fields -->
		<field_name>mvalidtime</field_name>
		<!-- field type (null, string, number, boolean, object, array), if empty is tested on all types -->
		<field_type>string</field_type>
		
		<!-- the javascript code that check the fields. There are predefined
		     variables that can be used:
		     
		     * fieldName:
		     * fieldValue:
		     * fieldType: null, string, number, boolean, object, array
		     * record: the entrire record containing the field
		     * json: the entire json
		     * jsonpath: an array with the "jsonpath" that point to the current record, useful for relative navigation
		 -->
		
		<jscode><![CDATA[

			const diffms = Date.now() - Date.parse( fieldValue );
			diffms / 24 / 3600 / 1000 < 30

		]]></jscode>
	</check>



</checks>
