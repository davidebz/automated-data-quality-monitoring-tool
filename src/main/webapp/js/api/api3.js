/*
 * (C) 2024 Catch Solve di Davide Montesin
 * License: AGPL
 */
export class API3 {
    static async call(action, json) {
        const params = new URLSearchParams();
        params.append('action', action);
        params.append('filter_byexample', JSON.stringify(json));
        // https://www.catch-solve.tech/noi-odh-testing-tool/api?
        // http://localhost:8080/api?
        const resp = await fetch('https://www.catch-solve.tech/noi-odh-testing-tool/api?' + params.toString());
        const respjson = await resp.json();
        // wait for debug pourpose
        await new Promise((s) => { setTimeout(s, 1000); });
        return respjson;
    }
    // begin crudl methods
    static async list__catchsolve_noiodh__test_dataset_max_ts_vw(filter) {
        const resp = await API3.call('catchsolve_noiodh.catchsolve_noiodh__test_dataset_max_ts_vw', filter);
        return resp;
    }
    static async list__catchsolve_noiodh__test_dataset_check_category_failed_recors_vw(filter) {
        const resp = await API3.call('catchsolve_noiodh.test_dataset_check_category_failed_recors_vw', filter);
        return resp;
    }
    static async list__catchsolve_noiodh__test_dataset_check_category_check_name_failed_recors_vw(filter) {
        const resp = await API3.call('catchsolve_noiodh.test_dataset_check_category_check_name_failed_recors_vw', filter);
        return resp;
    }
    static async list__catchsolve_noiodh__test_dataset_check_category_check_name_record_record_failed_vw(filter) {
        const resp = await API3.call('catchsolve_noiodh.test_dataset_check_category_check_name_record_record_failed_vw', filter);
        return resp;
    }
    static async list__catchsolve_noiodh__test_dataset_record_check_failed(filter) {
        const resp = await API3.call('catchsolve_noiodh.test_dataset_record_check_failed', filter);
        return resp;
    }
    static async list__catchsolve_noiodh__test_dataset_check_category_record_jsonpath_failed_vw(filter) {
        const resp = await API3.call('catchsolve_noiodh.test_dataset_check_category_record_jsonpath_failed_vw', filter);
        return resp;
    }
}
// end interfaces
//# sourceMappingURL=data:application/json;base64,